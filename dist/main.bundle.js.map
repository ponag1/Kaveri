{"version":3,"sources":["./src/$_gendir lazy","./src/app/app-routing.module.ts","./src/app/app.component.css","./src/app/app.component.html","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/approve-registration/approve-registration.component.css","./src/app/approve-registration/approve-registration.component.html","./src/app/approve-registration/approve-registration.component.ts","./src/app/gmaps/gmaps.component.css","./src/app/gmaps/gmaps.component.html","./src/app/gmaps/gmaps.component.ts","./src/app/guards/auth-guard.ts","./src/app/login/login.component.css","./src/app/login/login.component.html","./src/app/login/login.component.ts","./src/app/logout/logout.component.css","./src/app/logout/logout.component.html","./src/app/logout/logout.component.ts","./src/app/models/LandRecord.ts","./src/app/registration-form/registration-form.component.css","./src/app/registration-form/registration-form.component.html","./src/app/registration-form/registration-form.component.ts","./src/app/services/file-upload.service.ts","./src/app/services/login-authentication.service.ts","./src/app/services/managelandrecords.service.ts","./src/app/show-validation-error/show-validation-error.component.css","./src/app/show-validation-error/show-validation-error.component.html","./src/app/show-validation-error/show-validation-error.component.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_gendir lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/$$_gendir lazy\n// module id = ./src/$$_gendir lazy recursive\n// module chunks = main","import {LoginComponent} from \"./login/login.component\";\nimport {RegistrationFormComponent} from \"./registration-form/registration-form.component\";\nimport {ApproveRegistrationComponent} from \"./approve-registration/approve-registration.component\";\nimport {NgModule } from '@angular/core';\nimport {Routes, RouterModule } from '@angular/router';\nimport {AuthGuard} from './guards/auth-guard';\n\nconst routes: Routes = [\n  { path: 'login', component: LoginComponent },\n  { path: 'registrationForm', component:RegistrationFormComponent, canActivate: [AuthGuard]},\n  { path: 'approveRegistration', component:ApproveRegistrationComponent, canActivate: [AuthGuard]},\n  { path: '', redirectTo: '/login',pathMatch:'full'},\n  { path: '**', pathMatch:'full', redirectTo: '/login'}\n] \n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app-routing.module.ts","module.exports = \" /*to be done */\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.css\n// module id = ./src/app/app.component.css\n// module chunks = main","module.exports = \"<!-- This would embed the container class of bootstrap-->\\n<div class=\\\"container\\\">\\n  <router-outlet></router-outlet>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.html\n// module id = ./src/app/app.component.html\n// module chunks = main","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpModule } from '@angular/http';\nimport { AgmCoreModule } from '@agm/core';\nimport { AppComponent } from './app.component';\nimport { ShowValidationErrorComponent } from './show-validation-error/show-validation-error.component';\nimport { ManageLandRecordsService } from './services/managelandrecords.service'\nimport { AppRoutingModule } from './app-routing.module';\nimport { GmapsComponent } from './gmaps/gmaps.component';\nimport { LoginComponent } from './login/login.component';\nimport { AuthGuard } from './guards/auth-guard';\nimport { LoginAuthenticationService } from './services/login-authentication.service';\nimport { LogoutComponent } from './logout/logout.component';\nimport { FileUploadService } from './services/file-upload.service';\nimport { RegistrationFormComponent } from './registration-form/registration-form.component';\nimport { ApproveRegistrationComponent } from './approve-registration/approve-registration.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ShowValidationErrorComponent,\n    GmapsComponent,\n    LoginComponent,\n    LogoutComponent,\n    RegistrationFormComponent,\n    ApproveRegistrationComponent\n  ],\n  imports: [\n    BrowserModule,\n    ReactiveFormsModule,\n    FormsModule,\n    HttpModule,\n    AgmCoreModule.forRoot({\n      apiKey: 'AIzaSyCSIFuXPQXel1splGkx5ElXoU1bL60Jn-I' //credentials for Angular google maps\n    }), \n    AppRoutingModule\n    \n  ],\n  providers: [ManageLandRecordsService,AuthGuard,LoginAuthenticationService,FileUploadService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","module.exports = \"/* css */\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/approve-registration/approve-registration.component.css\n// module id = ./src/app/approve-registration/approve-registration.component.css\n// module chunks = main","module.exports = \"<div  align=\\\"center\\\"  [ngStyle]=\\\"{'background-color':'#87b3d9','height':'40px'}\\\">\\n  <h3 [ngStyle]=\\\"{'color':'#fff'}\\\">KAVERI- Approve registration Applications</h3>\\n</div>\\n<div align=\\\"right\\\"><app-logout></app-logout></div>\\n <div *ngIf=\\\"template==='form1';then approveForm1 else approveForm2\\\" ></div>\\n <ng-template #approveForm1>\\n  <div class=\\\"panel panel-default\\\">\\n  <div class=\\\"panel-heading\\\">\\n    <h1 class=\\\"panel-title\\\">Search Criteria</h1>\\n  </div>\\n  <div class=\\\"panel-body\\\">\\n    <div class=\\\"form-group\\\">\\n      <div class=\\\"col-md-4\\\">\\n        <label for=\\\"wardNo\\\" class=\\\"control-label required\\\">Ward #</label><span style=\\\"color: red;font-size: 20px;\\\">*</span>\\n        <input type=\\\"text\\\" id=\\\"wardNo\\\" name=\\\"wardNo\\\"  [(ngModel)]=\\\"wardNo\\\"  />\\n      </div>\\n      <div class=\\\"col-md-4\\\">\\n      <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" (click)= \\\"search()\\\">Search</button>\\n      </div>\\n    </div>\\n    </div>  \\n    </div>\\n<!--Search results of the land records for approval -->\\n<div *ngIf= \\\"fetchComplete\\\" >\\n<table class=\\\"table table-striped table-hover\\\">\\n  <thead>\\n      <tr>\\n          <th>Transaction ID</th>\\n          <th>Property ID</th>\\n          <th>Ward No</th>\\n          <th>Area Code</th>\\n          <th>Site No</th>\\n          <th>Total Area</th>\\n          <th>Approve</th>\\n      </tr>\\n  </thead>\\n  <tbody>\\n      <tr *ngFor=\\\"let land of landRecords\\\">\\n          <td><a (click) = \\\"viewData(land.txnID)\\\" style=\\\"cursor: pointer;\\\">{{land.txnID}}</a></td>\\n          <td>{{land.pid}}</td>\\n          <td>{{land.wardNo}}</td>\\n          <td>{{land.areaCode}}</td>\\n          <td>{{land.siteNo}}</td>\\n          <td>{{land.geoData.totalArea}}</td>\\n         <td><input type=\\\"checkbox\\\" name='approval'  [(ngModel)]='land.isKaveriApproved'  #approval=\\\"ngModel\\\" /></td>\\n      </tr>\\n  </tbody>\\n</table> \\n<div *ngIf='noSearchResults' style='color:red;' align='center'><strong>No matching results found !</strong></div>\\n<div *ngIf='!noSearchResults' align='right'>\\n<button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" (click)= \\\"onSubmit()\\\">Approve</button>\\n</div>\\n</div>\\n</ng-template>\\n<ng-template #approveForm2>\\n  <ng-container *ngIf=\\\"template==='form2';else applicationSuccess\\\">\\n  <div class=\\\"applicationForm\\\">\\n  <form class=\\\"form-horizontal\\\" [formGroup]=\\\"layoutForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n    <fieldset disabled>\\n    <div class=\\\"panel panel-default\\\">\\n      <div class=\\\"panel-heading\\\">\\n        <h1 class=\\\"panel-title\\\">Land Details</h1>\\n      </div>\\n      <div class=\\\"panel-body\\\">\\n        <div class=\\\"form-group\\\">\\n          <div class=\\\"col-md-4\\\" [ngClass]=\\\"displayFieldCss('pid')\\\">\\n            <label for=\\\"pid\\\" class=\\\"control-label required\\\">PID</label>\\n            <input type=\\\"text\\\" id=\\\"pid\\\" class=\\\"form-control\\\" formControlName=\\\"pid\\\" />\\n            <app-show-validation-error [displayError]=\\\"isFieldValid('pid')\\\" errorMsg=\\\"PID is mandatory\\\"></app-show-validation-error>\\n          </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <div class=\\\"col-md-4\\\" [ngClass]=\\\"displayFieldCss('wardNo')\\\">\\n            <label for=\\\"wardNo\\\" class=\\\"control-label required\\\">Ward #</label>\\n            <input type=\\\"text\\\" id=\\\"wardNo\\\" class=\\\"form-control\\\" formControlName=\\\"wardNo\\\" />\\n            <app-show-validation-error [displayError]=\\\"isFieldValid('wardNo')\\\" errorMsg=\\\"Ward # is mandatory\\\"></app-show-validation-error>\\n          </div>\\n          <div class=\\\"col-md-4\\\" [ngClass]=\\\"displayFieldCss('areaCode')\\\">\\n            <label for=\\\"areaCode\\\" class=\\\"control-label required\\\">Area Code</label>\\n            <input type=\\\"text\\\" id=\\\"areaCode\\\" class=\\\"form-control\\\" formControlName=\\\"areaCode\\\" />\\n            <app-show-validation-error [displayError]=\\\"isFieldValid('areaCode')\\\" errorMsg=\\\"Area code is mandatory\\\"></app-show-validation-error>\\n          </div>\\n          <div class=\\\"col-md-4\\\" [ngClass]=\\\"displayFieldCss('siteNo')\\\">\\n            <label for=\\\"siteNo\\\" class=\\\"control-label required\\\">Plot/Site #</label>\\n            <input type=\\\"text\\\" id=\\\"siteNo\\\" class=\\\"form-control\\\" formControlName=\\\"siteNo\\\" />\\n            <app-show-validation-error [displayError]=\\\"isFieldValid('siteNo')\\\" errorMsg=\\\"Plot/Site # is mandatory\\\"></app-show-validation-error>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"panel panel-default\\\">\\n      <div class=\\\"panel-heading\\\">\\n        <h1 class=\\\"panel-title\\\">Geographic Data</h1>\\n      </div>\\n      <div class=\\\"panel-body\\\">\\n        <div formGroupName=\\\"geoData\\\">\\n          <div class=\\\"form-group\\\">\\n            <div class=\\\"col-md-4\\\" [ngClass]=\\\"displayFieldCss('geoData.latitude')\\\">\\n              <label for=\\\"latitude\\\" class=\\\"control-label required\\\">Latitude</label>\\n              <input type=\\\"text\\\" id=\\\"latitude\\\" class=\\\"form-control\\\" formControlName=\\\"latitude\\\" (change)=\\\"setGeoCordinates()\\\" />\\n              <app-show-validation-error [displayError]=\\\"isFieldValid('geoData.latitude')\\\" errorMsg=\\\"Latitude is mandatory\\\"></app-show-validation-error>\\n            </div>\\n            <div class=\\\"col-md-4\\\" [ngClass]=\\\"displayFieldCss('geoData.longitude')\\\">\\n              <label for=\\\"Longitude\\\" class=\\\"control-label required\\\">Longitude</label>\\n              <input type=\\\"text\\\" id=\\\"longitude\\\" class=\\\"form-control\\\" formControlName=\\\"longitude\\\" (change)=\\\"setGeoCordinates()\\\" />\\n              <app-show-validation-error [displayError]=\\\"isFieldValid('geoData.longitude')\\\" errorMsg=\\\"Longitude is mandatory\\\"></app-show-validation-error>\\n            </div>\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <div class=\\\"col-md-4\\\" [ngClass]=\\\"displayFieldCss('geoData.length')\\\">\\n              <label for=\\\"length\\\" class=\\\"control-label required\\\">Plot Length (ft.)</label>\\n              <input type=\\\"text\\\" id=\\\"length\\\" class=\\\"form-control\\\" formControlName=\\\"length\\\" (change) = \\\"calculateTotalArea()\\\" />\\n              <app-show-validation-error [displayError]=\\\"isFieldValid('geoData.length')\\\" errorMsg=\\\"Plot length is mandatory\\\"></app-show-validation-error>\\n            </div>\\n            <div class=\\\"col-md-4\\\" [ngClass]=\\\"displayFieldCss('geoData.width')\\\">\\n              <label for=\\\"width\\\" class=\\\"control-label required\\\">Plot Width (ft.)</label>\\n              <input type=\\\"text\\\" id=\\\"width\\\" class=\\\"form-control\\\" formControlName=\\\"width\\\" (change) = \\\"calculateTotalArea()\\\" />\\n              <app-show-validation-error [displayError]=\\\"isFieldValid('geoData.width')\\\" errorMsg=\\\"Plot width is mandatory\\\"></app-show-validation-error>\\n            </div>\\n            <div class=\\\"col-md-4\\\">\\n              <label for=\\\"width\\\" class=\\\"control-label\\\">Total Plot Area (sq. ft.)</label>\\n              <input type=\\\"text\\\" id=\\\"width\\\" class=\\\"form-control\\\" formControlName=\\\"totalArea\\\" readonly />\\n            </div>\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <div class=\\\"col-md-12\\\" [ngClass]=\\\"displayFieldCss('geoData.address')\\\">\\n              <label for=\\\"address\\\" class=\\\"control-label required\\\">Property Address</label>\\n              <input type=\\\"text\\\" id=\\\"address\\\" class=\\\"form-control\\\" formControlName=\\\"address\\\" />\\n              <app-show-validation-error [displayError]=\\\"isFieldValid('geoData.address')\\\" errorMsg=\\\"Plot address is mandatory\\\"></app-show-validation-error>\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-12\\\" *ngIf=\\\"lat && long\\\">\\n          <app-gmaps [lat]=\\\"lat\\\"  [lng]=\\\"long\\\"></app-gmaps>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"panel panel-default\\\">\\n      <div class=\\\"panel-heading\\\">\\n        <h1 class=\\\"panel-title\\\">Pre Mutation Sketch</h1>\\n      </div>\\n      <div class=\\\"panel-body\\\">\\n        <div>\\n        <div class=\\\"col-md-4\\\" *ngIf=\\\"sketchURL!=null && sketchURL!=''\\\">\\n        <a [href]='sketchURL' target = '_blank'>View Sketch</a>\\n        </div>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"panel panel-default\\\">\\n      <div class=\\\"panel-heading\\\">\\n        <h1 class=\\\"panel-title\\\">Land Allottee Details</h1>\\n      </div>\\n      <div class=\\\"panel-body\\\">\\n        <div formGroupName=\\\"ownerDetails\\\">\\n          <div class=\\\"form-group\\\">\\n            <div class=\\\"col-md-4\\\" [ngClass]=\\\"displayFieldCss('ownerDetails.ownerName')\\\">\\n              <label for=\\\"ownerName\\\" class=\\\"control-label required\\\">Allottee Name</label>\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"ownerName\\\" formControlName=\\\"ownerName\\\">\\n              <app-show-validation-error [displayError]=\\\"isFieldValid('ownerDetails.ownerName')\\\" errorMsg=\\\"Property allotee Name is mandatory\\\"></app-show-validation-error>\\n            </div>\\n\\n            <div class=\\\"col-md-4\\\" [ngClass]=\\\"displayFieldCss('ownerDetails.aadharNo')\\\">\\n              <label for=\\\"aadharNo\\\" class=\\\"control-label required\\\">Aadhar #</label>\\n              <input type=\\\"text\\\" id=\\\"aadharNo\\\" class=\\\"form-control\\\" formControlName=\\\"aadharNo\\\" />\\n              <app-show-validation-error [displayError]=\\\"isFieldValid('ownerDetails.aadharNo')\\\" errorMsg=\\\"Aadhar # is mandatory\\\"></app-show-validation-error>\\n            </div>\\n\\n            <div class=\\\"col-md-4\\\" [ngClass]=\\\"displayFieldCss('ownerDetails.gender')\\\">\\n             <div> <label class=\\\"control-label required\\\">Gender</label></div>\\n              <label class=\\\"md-check radio-inline\\\">\\n                <input type=\\\"radio\\\" value=\\\"M\\\" formControlName=\\\"gender\\\">Male\\n              </label>\\n              <label class=\\\"md-check radio-inline\\\">\\n                <input type=\\\"radio\\\" value=\\\"F\\\" formControlName=\\\"gender\\\">Female\\n              </label>\\n              <app-show-validation-error [displayError]=\\\"isFieldValid('ownerDetails.gender')\\\" errorMsg=\\\"Gender is mandatory\\\"></app-show-validation-error>\\n            </div>\\n\\n              </div>\\n              <div class=\\\"form-group\\\">\\n                <div class=\\\"col-md-4\\\" [ngClass]=\\\"displayFieldCss('ownerDetails.mobileNo')\\\">\\n                  <label for=\\\"mobileNo\\\" class=\\\"control-label required\\\">Mobile</label>\\n                  <input type=\\\"text\\\" id=\\\"mobileNo\\\" class=\\\"form-control\\\" formControlName=\\\"mobileNo\\\" />\\n                  <app-show-validation-error [displayError]=\\\"isFieldValid('ownerDetails.mobileNo')\\\" errorMsg=\\\"Mobile number is mandatory\\\"></app-show-validation-error>\\n                </div>\\n                <div class=\\\"col-md-4\\\" [ngClass]=\\\"displayFieldCss('ownerDetails.emailID')\\\">\\n                  <label for=\\\"emailID\\\" class=\\\"control-label required\\\">Email ID</label>\\n                  <input type=\\\"text\\\" id=\\\"emailID\\\" class=\\\"form-control\\\" formControlName=\\\"emailID\\\" />\\n                  <app-show-validation-error [displayError]=\\\"isFieldValid('ownerDetails.emailID')\\\" errorMsg=\\\"Email ID is mandatory\\\"></app-show-validation-error>\\n                </div>\\n              </div>\\n              <div class=\\\"form-group\\\">\\n                <div class=\\\"col-md-12\\\" [ngClass]=\\\"displayFieldCss('ownerDetails.address')\\\">\\n                  <label for=\\\"ownerAddress\\\" class=\\\"control-label required\\\">Allottee Address</label>\\n                  <input type=\\\"text\\\" id=\\\"ownerAddress\\\" class=\\\"form-control\\\" formControlName=\\\"address\\\" />\\n                  <app-show-validation-error [displayError]=\\\"isFieldValid('ownerDetails.address')\\\" errorMsg=\\\"Allotee address is mandatory\\\"></app-show-validation-error>\\n                </div>\\n              </div>\\n\\n            </div>\\n          </div>\\n    </div>\\n    <div class=\\\"panel panel-default\\\">\\n      <div class=\\\"panel-heading\\\">\\n        <h1 class=\\\"panel-title\\\">New allotee Details</h1>\\n      </div>\\n      <div class=\\\"panel-body\\\">\\n        <div formGroupName=\\\"newOwnerDetails\\\">\\n          <div class=\\\"form-group\\\">\\n            <div class=\\\"col-md-4\\\" [ngClass]=\\\"displayFieldCss('newOwnerDetails.ownerName')\\\">\\n              <label for=\\\"newownerName\\\" class=\\\"control-label required\\\">Allottee Name</label>\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"newownerName\\\" formControlName=\\\"ownerName\\\">\\n              <app-show-validation-error [displayError]=\\\"isFieldValid('newOwnerDetails.ownerName')\\\" errorMsg=\\\"Property allotee Name is mandatory\\\"></app-show-validation-error>\\n            </div>\\n\\n            <div class=\\\"col-md-4\\\" [ngClass]=\\\"displayFieldCss('newOwnerDetails.aadharNo')\\\">\\n              <label for=\\\"newaadharNo\\\" class=\\\"control-label required\\\">Aadhar #</label>\\n              <input type=\\\"text\\\" id=\\\"newaadharNo\\\" class=\\\"form-control\\\" formControlName=\\\"aadharNo\\\" />\\n              <app-show-validation-error [displayError]=\\\"isFieldValid('newOwnerDetails.aadharNo')\\\" errorMsg=\\\"Aadhar # is mandatory\\\"></app-show-validation-error>\\n            </div>\\n\\n            <div class=\\\"col-md-4\\\" [ngClass]=\\\"displayFieldCss('newOwnerDetails.gender')\\\">\\n             <div> <label class=\\\"control-label required\\\">Gender</label></div>\\n              <label class=\\\"md-check radio-inline\\\">\\n                <input type=\\\"radio\\\" value=\\\"M\\\" formControlName=\\\"gender\\\">Male\\n              </label>\\n              <label class=\\\"md-check radio-inline\\\">\\n                <input type=\\\"radio\\\" value=\\\"F\\\" formControlName=\\\"gender\\\">Female\\n              </label>\\n              <app-show-validation-error [displayError]=\\\"isFieldValid('newOwnerDetails.gender')\\\" errorMsg=\\\"Gender is mandatory\\\"></app-show-validation-error>\\n            </div>\\n\\n              </div>\\n              <div class=\\\"form-group\\\">\\n                <div class=\\\"col-md-4\\\" [ngClass]=\\\"displayFieldCss('newOwnerDetails.mobileNo')\\\">\\n                  <label for=\\\"newmobileNo\\\" class=\\\"control-label required\\\">Mobile</label>\\n                  <input type=\\\"text\\\" id=\\\"newmobileNo\\\" class=\\\"form-control\\\" formControlName=\\\"mobileNo\\\" />\\n                  <app-show-validation-error [displayError]=\\\"isFieldValid('newOwnerDetails.mobileNo')\\\" errorMsg=\\\"Mobile number is mandatory\\\"></app-show-validation-error>\\n                </div>\\n                <div class=\\\"col-md-4\\\" [ngClass]=\\\"displayFieldCss('newOwnerDetails.emailID')\\\">\\n                  <label for=\\\"newemailID\\\" class=\\\"control-label required\\\">Email ID</label>\\n                  <input type=\\\"text\\\" id=\\\"newemailID\\\" class=\\\"form-control\\\" formControlName=\\\"emailID\\\" />\\n                  <app-show-validation-error [displayError]=\\\"isFieldValid('newOwnerDetails.emailID')\\\" errorMsg=\\\"Email ID is mandatory\\\"></app-show-validation-error>\\n                </div>\\n              </div>\\n              <div class=\\\"form-group\\\">\\n                <div class=\\\"col-md-12\\\" [ngClass]=\\\"displayFieldCss('newOwnerDetails.address')\\\">\\n                  <label for=\\\"newownerAddress\\\" class=\\\"control-label required\\\">Allottee Address</label>\\n                  <input type=\\\"text\\\" id=\\\"newownerAddress\\\" class=\\\"form-control\\\" formControlName=\\\"address\\\" />\\n                  <app-show-validation-error [displayError]=\\\"isFieldValid('newOwnerDetails.address')\\\" errorMsg=\\\"Allotee address is mandatory\\\"></app-show-validation-error>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n    </div>\\n\\n    <div class=\\\"panel panel-default\\\">\\n      <div class=\\\"panel-heading\\\">\\n        <h1 class=\\\"panel-title\\\">Sale Details</h1>\\n      </div>\\n      <div class=\\\"panel-body\\\">\\n      <div class=\\\"form-group\\\">\\n        <div class=\\\"col-md-4\\\" [ngClass]=\\\"displayFieldCss('saleRate')\\\">\\n          <label for=\\\"saleRate\\\" class=\\\"control-label required\\\">Sale Rate</label>\\n          <input type=\\\"text\\\" id=\\\"saleRate\\\" class=\\\"form-control\\\" formControlName=\\\"saleRate\\\" />\\n          <app-show-validation-error [displayError]=\\\"isFieldValid('saleRate')\\\" errorMsg=\\\"Sale Rate is mandatory\\\"></app-show-validation-error>\\n        </div>\\n      </div>\\n      </div>\\n    </div>\\n    </fieldset>                  \\n    <div align=\\\"right\\\">\\n      <button class=\\\"btn btn-danger\\\" (click) = \\\"back()\\\">Back</button>\\n    </div>    \\n  </form>\\n</div>\\n</ng-container>\\n</ng-template>\\n<!--Success message for the approval-->\\n<ng-template #applicationSuccess >\\n<div class=\\\"alert alert-success\\\"> <strong>Success!</strong>\\nAll the below approved records have been committed to the HyperLedger. Their unique Transaction Ids are listed below :\\n<ul *ngFor= \\\"let rec of approvedRecords\\\">\\n  <li>{{rec.txnID}}</li>\\n</ul>\\n</div>\\n  <div class=\\\"alert alert-info\\\">\\n    Please click on <strong>OK</strong> to approve other applications !\\n  </div>\\n  <div align=\\\"center\\\"><button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" (click)=\\\"submitNew()\\\">OK</button></div>\\n</ng-template>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/approve-registration/approve-registration.component.html\n// module id = ./src/app/approve-registration/approve-registration.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { LandRecord } from '../models/LandRecord';\nimport { ManageLandRecordsService } from '../services/managelandrecords.service';\nimport { Observable } from 'rxjs';\nimport {\n  FormGroup,\n  FormBuilder,\n  Validators,\n  FormControl\n} from '@angular/forms';\n\n@Component({\n  selector: 'app-approve-registration',\n  templateUrl: './approve-registration.component.html',\n  styleUrls: ['./approve-registration.component.css']\n})\nexport class ApproveRegistrationComponent implements OnInit {\n  template : string = \"form1\";\n  landRecords : LandRecord[];\n  landRecord : LandRecord = new LandRecord();\n  approvedRecords : LandRecord[];\n  wardNo : number;\n  fetchComplete : boolean = false;\n  noSearchResults : boolean = false;\n  layoutForm: FormGroup;\n  lat :number;\n  long : number;\n  sketchURL : string;\n\n  constructor(private formBuilder: FormBuilder, private manageLandRecordsService : ManageLandRecordsService) { }\n\n  ngOnInit() {\n  }\n\n  search(){\n    console.log(\"ward No :\" + this.wardNo);\n    this.manageLandRecordsService.getLandRecordsKaveriByWard(this.wardNo)\n    .subscribe(\n      response => {\n            console.log(\"res received from getLandRecords service\" + JSON.stringify(response));\n            if (response !=null) {\n              //  this.router.navigate(['/success', this.landRecord.pid]);\n              this.landRecords = <LandRecord[]> response.landRecords.filter(kaveriRec => !kaveriRec.isKaveriApproved);\n             if(this.landRecords!=null && this.landRecords.length > 0){\n               this.noSearchResults= false;\n             }else{\n               this.noSearchResults = true;\n             }\n              this.fetchComplete = true;   \n            }\n      });\n  }\n\n  viewData(txnID){\n    this.template = \"form2\";\n    this.loadForm(txnID);\n  }\n\n  loadForm(txnID) {\n    this.lat=null;\n    this.long = null;\n    this.layoutForm = this.formBuilder.group({\n      TimeStamp: [null],\n      pid: [''],\n      wardNo: [null],\n      areaCode: [null],\n      siteNo: [null],\n      geoData: this.formBuilder.group({\n        latitude: [null],\n        longitude: [null],\n        length: [null],\n        width: [null],\n        totalArea: '',\n        address: [null]\n      }),\n      preMutationSketch: [null],\n      ownerDetails: this.formBuilder.group({\n        ownerName: [null],\n        gender:[null],\n        aadharNo: [null],\n        mobileNo: [null],\n        emailID:[null],\n        address: [null]\n      }),\n      newOwnerDetails: this.formBuilder.group({\n        ownerName: [null],\n        gender:[null],\n        aadharNo: [null],\n        mobileNo: [null],\n        emailID:[null],\n        address: [null]\n      }),\n      saleRate :[null]\n    });\n    console.log(\"Txn Id:\"+txnID);\n    this.manageLandRecordsService.getLandRecordsKaveriBytxnId(txnID)\n      .subscribe(\n        response => {\n          console.log(\"res received getLandRecordbyTxnId service\" + JSON.stringify(response));\n          if (response !=null && response.success) {\n            this.landRecord = <LandRecord> response.landRecords[0];\n            console.log(\"landRecord object received:\" + JSON.stringify(this.landRecord));\n            if(this.landRecord.sketchURL!=null && this.landRecord.sketchURL!=\"\"){\n                  this.sketchURL = this.landRecord.sketchURL;\n            }\n            console.log(\"sketch URL:\"+this.sketchURL);\n            this.layoutForm.patchValue(this.landRecord);\n            this.setGeoCordinates();\n          }\n      });\n  }\n\n  setGeoCordinates(){\n    this.lat = parseFloat(this.layoutForm.get('geoData.latitude').value);\n    this.long =parseFloat( this.layoutForm.get('geoData.longitude').value);\n  } \n\n  onSubmit(){\n    console.log(\"ApplicationData\" + JSON.stringify(this.landRecords));\n    this.approvedRecords =  this.landRecords.filter(\n    (rec) => rec.isKaveriApproved);\n    this.manageLandRecordsService.updateKaveriApprovedRecords(this.approvedRecords)\n    .subscribe(\n      response => {\n        console.log(\"res received updateLandrecordKaveri service\" + JSON.stringify(response));\n        if (response !=null && response.success) {\n          //  this.router.navigate(['/success', this.landRecord.pid]);\n         this.template = \"form3\";\n        }   \n      });\n  }\n\n  isFieldValid(field: string) {\n    return !this.layoutForm.get(field).valid && this.layoutForm.get(field).touched;\n  }\n\n  displayFieldCss(field: string) {\n    return {\n      'has-error': this.isFieldValid(field),\n      'has-feedback': this.isFieldValid(field)\n    };\n  }\n\n  submitNew(){\n        this.landRecords = [];\n        this.template = \"form1\";\n        this.wardNo = null; \n        this.fetchComplete = false;\n  }\n\n  back(){\n    this.template = \"form1\";\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/approve-registration/approve-registration.component.ts","module.exports = \"\\nagm-map {\\n  height: 200px;\\n}\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/gmaps/gmaps.component.css\n// module id = ./src/app/gmaps/gmaps.component.css\n// module chunks = main","module.exports = \"\\n<agm-map \\n  [latitude]=\\\"lat\\\"\\n  [longitude]=\\\"lng\\\"\\n  [zoom]=\\\"16\\\"\\n  [disableDefaultUI]=\\\"true\\\"\\n  [zoomControl]=\\\"true\\\">\\n\\n  <agm-marker \\n      [latitude]=\\\"lat\\\"\\n      [longitude]=\\\"lng\\\"\\n      [label]=\\\"\\\"\\n      [markerDraggable]=\\\"false\\\">\\n  </agm-marker>\\n</agm-map>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/gmaps/gmaps.component.html\n// module id = ./src/app/gmaps/gmaps.component.html\n// module chunks = main","import { Component, OnInit,Input } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\n\n@Component({\n  selector: 'app-gmaps',\n  templateUrl: './gmaps.component.html',\n  styleUrls: ['./gmaps.component.css']\n})\nexport class GmapsComponent implements OnInit {\n  @Input() lat:number;\n  @Input() lng:number;\n  constructor(){\n  }\n  ngOnInit() {\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/gmaps/gmaps.component.ts","import { Injectable } from '@angular/core';\nimport { Router, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport {LoginAuthenticationService } from '../services/login-authentication.service';\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n\n  constructor(private loginAuthService : LoginAuthenticationService, private router :Router) { }\n  //implement canActivate Interface to check if user is already logged in\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) : boolean {\n     let url: string = state.url;\n\t   console.log('State Url:'+ url);\n\tif (this.loginAuthService.isUserLoggedIn()) {\n\t\treturn true; \n\t}\n   \n    // not logged in so redirect to login page with the return url\n    this.router.navigate(['/login'], { queryParams: { returnUrl: state.url }});\n        return false;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/guards/auth-guard.ts","module.exports = \".login.alert{\\n  color:red;\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/login/login.component.css\n// module id = ./src/app/login/login.component.css\n// module chunks = main","module.exports = \"<main role=\\\"main\\\" class=\\\"site-content aligner\\\">\\n  <div class=\\\"aligner-item\\\">\\n    <div class=\\\"container\\\">\\n      <div class=\\\"box center-block offset-bottom-large\\\">\\n        <h1 class=\\\"h4 page-header text-center offset-bottom\\\">Sign In</h1>\\n      </div>\\n    <div class=\\\"col-md-4 col-md-offset-4\\\">\\n    <form #userlogin = \\\"ngForm\\\" (ngSubmit) = \\\"onSubmit(userlogin)\\\" novalidate>\\n      <div class=\\\"form-group\\\" [ngClass]=\\\"{ 'has-error': userlogin.submitted && !username.valid }\\\">\\n        <label class=\\\"control-label required\\\" for=\\\"username\\\">Username</label>\\n        <input type = \\\"text\\\" class=\\\"form-control\\\" name = \\\"username\\\" placeholder=\\\"Enter username\\\" [(ngModel)]=\\\"login.username\\\" #username=\\\"ngModel\\\" required>\\n        <div class=\\\"login alert\\\" *ngIf=\\\"userlogin.submitted && !username.valid\\\">Username is required</div>\\n      </div>\\n      <div class=\\\"form-group\\\" [ngClass]=\\\"{ 'has-error': userlogin.submitted && !password.valid }\\\">\\n        <label class=\\\"control-label required\\\" for=\\\"password\\\">Password</label>\\n        <input type = \\\"password\\\" class=\\\"form-control\\\" name = \\\"password\\\" placeholder=\\\"Enter password\\\" [(ngModel)]=\\\"login.password\\\" #password=\\\"ngModel\\\" required>\\n        <div class=\\\"login alert\\\"  *ngIf=\\\"userlogin.submitted && !password.valid\\\">Password is required</div>\\n      </div>\\n      <div class=\\\"form-group\\\" align='center'>\\n          <button [disabled]=\\\"loading\\\" class=\\\"btn btn-primary btn-raised btn-block\\\">Sign In</button>\\n      </div>\\n      <div *ngIf=\\\"authMessage && authMessage!=''\\\" class=\\\"alert alert-danger\\\" >{{authMessage}}</div>\\n    </form>\\n  </div>\\n    </div>\\n  </div>\\n</main>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/login/login.component.html\n// module id = ./src/app/login/login.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport {NgForm} from '@angular/forms';\nimport {LoginAuthenticationService } from '../services/login-authentication.service';\nimport { Router,ActivatedRoute} from '@angular/router';\nimport { Form } from '@angular/forms';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  login: any = {};\n  loading = false;\n  authMessage : string;\n\n  constructor(private loginAuthService : LoginAuthenticationService, private router: Router, private route :ActivatedRoute) {}\n\n  ngOnInit() {\n\n  }\n\n  onSubmit(userlogin : NgForm){\n    if(userlogin.valid){\n        this.loading = true; // validation in progress\n        console.log(\"Form values :\" + JSON.stringify(this.login));\n        let user = {\"userId\" : this.login.username, \"password\" : this.login.password};\n        //check for user authentication\n        this.loginAuthService.isUserAuthenticated (user)\n        .subscribe(\n        authenticated => {\n            this.loading=false;\n            console.log(\"res received authentication service :\" + authenticated);\n            if (authenticated) {\n              this.authMessage=null;\n              //if auth success route according to the role\n              console.log(\"logged in role :\" + this.loginAuthService.getLoggedInRole());\n              if(this.loginAuthService.getLoggedInRole() == \"Mojani_Surveyor\"){\n                console.log(\"inside mojani survey\");\n                this.router.navigateByUrl('/layoutApplication');\n              }\n              else if(this.loginAuthService.getLoggedInRole() == \"Mojani_Approver\"){\n                console.log(\"Inside mojani approver\");\n                this.router.navigateByUrl('/approveSurveys');\n              } \n              else if(this.loginAuthService.getLoggedInRole() == \"Kaveri_Registrar\"){\n                console.log(\"Inside Registration form\");\n                this.router.navigateByUrl('/registrationForm');\n              }\n              else if(this.loginAuthService.getLoggedInRole() == \"Kaveri_Approver\"){\n                console.log(\"Inside Registration approver form\");\n                this.router.navigateByUrl('/approveRegistration');\n              }            \n            }else{\n                this.authMessage = this.loginAuthService.getAuthMessage();\n            }\n         });\n     }\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/login/login.component.ts","module.exports = \"/*CSS to go here */\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/logout/logout.component.css\n// module id = ./src/app/logout/logout.component.css\n// module chunks = main","module.exports = \"<a href='#' (click)=\\\"logout()\\\"><span class=\\\"glyphicon glyphicon-log-out\\\"></span> Logout</a>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/logout/logout.component.html\n// module id = ./src/app/logout/logout.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { FormControl, FormGroup } from '@angular/forms';\n\nimport {LoginAuthenticationService } from '../services/login-authentication.service';\n\n@Component({\n  selector: 'app-logout',\n  templateUrl: './logout.component.html',\n  styleUrls: ['./logout.component.css']\n})\n\nexport class LogoutComponent implements OnInit{\n\n    constructor(private authService: LoginAuthenticationService, private router: Router) {}\n    ngOnInit() {\n    }\t\t\n    logout() { //redirect to login screen after logout\n       this.authService.logoutUser();\n       this.router.navigateByUrl('/Login');\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/logout/logout.component.ts","export class LandRecord {\n  pid: number;\n  txnID: string;\n  wardNo: number;\n  areaCode: number;\n  siteNo: number;\n  geoData: GeoData;\n  ownerDetails: Owner;\n  newOwnerDetails: Owner;\n  preMutationSketch: string;\n  TimeStamp: any;\n  isMojaniSubmitted : boolean;\n  isMojaniApproved :  boolean;\n  isKaveriApproved: boolean;\n  sketchURL: string;\n  constructor() { }\n\n}\n\nexport class GeoData {\n  latitude: number;\n  longitude: number;\n  length: number;\n  width: number;\n  totalArea: number;\n  address: string;\n  constructor() { }\n}\n\nexport class Owner {\n  ownerName: string;\n  gender: string;\n  aadharNo: number;\n  mobileNo: number;\n  emailID: string;\n  address: string;\n  constructor() { }\n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/models/LandRecord.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/registration-form/registration-form.component.css\n// module id = ./src/app/registration-form/registration-form.component.css\n// module chunks = main","module.exports = \"<div  align=\\\"center\\\" [ngStyle]=\\\"{'background-color':'#87b3d9','height':'40px'}\\\">\\n  <h3 [ngStyle]=\\\"{'color':'#fff'}\\\">KAVERI- Registration Application</h3>\\n</div>\\n<div align=\\\"right\\\"><app-logout></app-logout></div>\\n<div *ngIf =\\\"template==='form1';then registrationForm1 else registrationForm2\\\"></div>\\n<ng-template #registrationForm1>\\n  <div class=\\\"panel panel-default\\\">\\n  <div class=\\\"panel-heading\\\">\\n    <h1 class=\\\"panel-title\\\">Search Criteria</h1>\\n  </div>\\n  <div class=\\\"panel-body\\\">\\n    <div class=\\\"form-group\\\">\\n      <div class=\\\"col-md-3\\\">\\n        <label for=\\\"pid\\\" class=\\\"control-label required\\\">PID</label><span style=\\\"color: red;font-size: 20px;\\\">*</span>\\n        <input type=\\\"text\\\" id=\\\"pid\\\" name=\\\"pid\\\"  [(ngModel)]=\\\"pid\\\"  />\\n      </div>\\n      <div class=\\\"col-md-3\\\">\\n      <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" (click)= \\\"search()\\\">Search</button>\\n      </div>\\n    </div>\\n  </div>  \\n</div>\\n<!--Search results of the land records for Registration -->\\n<div *ngIf= \\\"fetchComplete\\\" > \\n   <form class=\\\"form-horizontal\\\">\\n    <div class=\\\"panel panel-default\\\">\\n      <div class=\\\"panel-heading\\\">\\n        <h1 class=\\\"panel-title\\\">Survey Land Allotee Details</h1>\\n      </div>\\n      <div class=\\\"panel-body\\\"> \\n          <div class=\\\"form-group\\\" *ngIf=\\\"!noSearchResultsSurvey\\\">\\n          <div class=\\\"col-md-4\\\">\\n            <label for=\\\"ownerName\\\" class=\\\"control-label\\\">Allottee Name</label>\\n            <input type=\\\"text\\\" id=\\\"ownerName\\\" class=\\\"form-control\\\" name=\\\"ownerName\\\" [ngModel]=\\\"landRecordsMojani.ownerDetails.ownerName\\\" readonly>\\n          </div>\\n          <div class=\\\"col-md-4\\\">\\n            <label for=\\\"aadharNo\\\" class=\\\"control-label\\\">Aadhar #</label>\\n            <input type=\\\"text\\\" id=\\\"aadharNo\\\" class=\\\"form-control\\\" name=\\\"aadharNo\\\" [ngModel]=\\\"landRecordsMojani.ownerDetails.aadharNo\\\" readonly/>\\n          </div>\\n          <div class=\\\"col-md-4\\\">\\n          <div> <label class=\\\"control-label\\\">Gender</label></div>\\n            <label class=\\\"md-check radio-inline\\\">\\n              <input type=\\\"radio\\\" value=\\\"M\\\" name=\\\"gender\\\" [ngModel]=\\\"landRecordsMojani.ownerDetails.gender\\\" disabled>Male\\n            </label>\\n            <label class=\\\"md-check radio-inline\\\">\\n              <input type=\\\"radio\\\" value=\\\"F\\\" name=\\\"gender\\\" [ngModel]=\\\"landRecordsMojani.ownerDetails.gender\\\" disabled>Female\\n            </label>\\n          </div>\\n        </div>\\n        <div class=\\\"form-group\\\" *ngIf=\\\"!noSearchResultsSurvey\\\">\\n          <div class=\\\"col-md-4\\\">\\n            <label for=\\\"mobileNo\\\" class=\\\"control-label\\\">Mobile</label>\\n            <input type=\\\"text\\\" id=\\\"mobileNo\\\" class=\\\"form-control\\\" name=\\\"mobileNo\\\" [ngModel]=\\\"landRecordsMojani.ownerDetails.mobileNo\\\" readonly/>\\n          </div>\\n          <div class=\\\"col-md-4\\\">\\n            <label for=\\\"emailID\\\" class=\\\"control-label\\\">Email ID</label>\\n            <input type=\\\"text\\\" id=\\\"emailID\\\" class=\\\"form-control\\\" name=\\\"emailID\\\" [ngModel]=\\\"landRecordsMojani.ownerDetails.emailID\\\" readonly />\\n          </div>\\n          <div class=\\\"col-md-4\\\">\\n              <label for=\\\"mojaniApproved\\\" class=\\\"control-label\\\">Is Mojani Approved</label>\\n              <input type=\\\"checkbox\\\" id=\\\"mojaniApproved\\\" name=\\\"mojaniApproved\\\" [ngModel]=\\\"landRecordsMojani.isMojaniApproved\\\" disabled />\\n            </div>\\n        </div>\\n        <div class=\\\"form-group\\\" *ngIf=\\\"!noSearchResultsSurvey\\\">\\n          <div class=\\\"col-md-12\\\">\\n            <div><label for=\\\"ownerAddress\\\" class=\\\"control-label\\\">Allottee Address</label></div>\\n            <input type=\\\"text\\\" id=\\\"ownerAddress\\\" class=\\\"form-control\\\" name=\\\"address\\\" [ngModel]=\\\"landRecordsMojani.ownerDetails.address\\\" readonly/>\\n          </div>\\n        </div>\\n        <div class=\\\"form-group\\\" *ngIf='noSearchResultsSurvey'>\\n           <div class=\\\"col-md-12\\\">\\n            <p style='color:red;' align='center'><strong>No matching results found !</strong></p>\\n           </div>\\n        </div>\\n      </div>\\n    </div>\\n  </form> \\n  <div  align=\\\"center\\\">\\n    <h4><u><b>Transaction History</b></u></h4>\\n  </div>\\n  <table class=\\\"table table-striped table-hover\\\">\\n  <thead>\\n      <tr>\\n          <th>Transaction ID </th>\\n          <th>From Owner Name</th>\\n          <th>From Owner Aadhaar No</th>\\n          <th>From Owner Mobile No</th>\\n          <th>To Owner Name</th>\\n          <th>To Owner Aadhaar No</th>\\n          <th>To Owner Mobile No</th>   \\n          <th>Is Kaveri Approved</th>       \\n      </tr>\\n  </thead>\\n  <tbody>\\n      <tr *ngFor=\\\"let land of landRecords\\\">\\n          <td>{{land.txnID}}</td>\\n          <td>{{land.ownerDetails.ownerName}}</td>\\n          <td>{{land.ownerDetails.aadharNo}}</td>\\n          <td>{{land.ownerDetails.mobileNo}}</td>\\n          <td>{{land.newOwnerDetails.ownerName}}</td>\\n          <td>{{land.newOwnerDetails.aadharNo}}</td>\\n          <td>{{land.newOwnerDetails.mobileNo}}</td>  \\n          <td><input type=\\\"checkbox\\\" name='kaveriApproval' [ngModel]='land.isKaveriApproved' disabled/></td>       \\n      </tr>\\n  </tbody>\\n </table> \\n <div *ngIf='noSearchResults' style='color:red;' align='center'><strong>No matching results found !</strong></div>\\n <div align=\\\"right\\\">\\n    <button class=\\\"btn btn-primary\\\" (click)= \\\"loadRegistrationForm()\\\" [disabled]=\\\"!transferEnabled\\\">Transfer Ownership</button>\\n </div>\\n</div>\\n</ng-template> \\n\\n<!-- Tranfer ownership editable form -->\\n<ng-template #registrationForm2>\\n  <ng-container *ngIf=\\\"template==='form2';else applicationSuccess\\\">\\n  <div class=\\\"applicationForm\\\">\\n  <form class=\\\"form-horizontal\\\" [formGroup]=\\\"layoutForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n    <fieldset disabled>\\n    <div class=\\\"panel panel-default\\\">\\n      <div class=\\\"panel-heading\\\">\\n        <h1 class=\\\"panel-title\\\">Land Details</h1>\\n      </div>\\n      <div class=\\\"panel-body\\\">\\n        <div class=\\\"form-group\\\">\\n          <div class=\\\"col-md-4\\\" [ngClass]=\\\"displayFieldCss('pid')\\\">\\n            <label for=\\\"pid\\\" class=\\\"control-label required\\\">PID</label>\\n            <input type=\\\"text\\\" id=\\\"pid\\\" class=\\\"form-control\\\" formControlName=\\\"pid\\\" />\\n            <app-show-validation-error [displayError]=\\\"isFieldValid('pid')\\\" errorMsg=\\\"PID is mandatory\\\"></app-show-validation-error>\\n          </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <div class=\\\"col-md-4\\\" [ngClass]=\\\"displayFieldCss('wardNo')\\\">\\n            <label for=\\\"wardNo\\\" class=\\\"control-label required\\\">Ward #</label>\\n            <input type=\\\"text\\\" id=\\\"wardNo\\\" class=\\\"form-control\\\" formControlName=\\\"wardNo\\\" />\\n            <app-show-validation-error [displayError]=\\\"isFieldValid('wardNo')\\\" errorMsg=\\\"Ward # is mandatory\\\"></app-show-validation-error>\\n          </div>\\n          <div class=\\\"col-md-4\\\" [ngClass]=\\\"displayFieldCss('areaCode')\\\">\\n            <label for=\\\"areaCode\\\" class=\\\"control-label required\\\">Area Code</label>\\n            <input type=\\\"text\\\" id=\\\"areaCode\\\" class=\\\"form-control\\\" formControlName=\\\"areaCode\\\" />\\n            <app-show-validation-error [displayError]=\\\"isFieldValid('areaCode')\\\" errorMsg=\\\"Area code is mandatory\\\"></app-show-validation-error>\\n          </div>\\n          <div class=\\\"col-md-4\\\" [ngClass]=\\\"displayFieldCss('siteNo')\\\">\\n            <label for=\\\"siteNo\\\" class=\\\"control-label required\\\">Plot/Site #</label>\\n            <input type=\\\"text\\\" id=\\\"siteNo\\\" class=\\\"form-control\\\" formControlName=\\\"siteNo\\\" />\\n            <app-show-validation-error [displayError]=\\\"isFieldValid('siteNo')\\\" errorMsg=\\\"Plot/Site # is mandatory\\\"></app-show-validation-error>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"panel panel-default\\\">\\n      <div class=\\\"panel-heading\\\">\\n        <h1 class=\\\"panel-title\\\">Geographic Data</h1>\\n      </div>\\n      <div class=\\\"panel-body\\\">\\n        <div formGroupName=\\\"geoData\\\">\\n          <div class=\\\"form-group\\\">\\n            <div class=\\\"col-md-4\\\" [ngClass]=\\\"displayFieldCss('geoData.latitude')\\\">\\n              <label for=\\\"latitude\\\" class=\\\"control-label required\\\">Latitude</label>\\n              <input type=\\\"text\\\" id=\\\"latitude\\\" class=\\\"form-control\\\" formControlName=\\\"latitude\\\" (change)=\\\"setGeoCordinates()\\\" />\\n              <app-show-validation-error [displayError]=\\\"isFieldValid('geoData.latitude')\\\" errorMsg=\\\"Latitude is mandatory\\\"></app-show-validation-error>\\n            </div>\\n            <div class=\\\"col-md-4\\\" [ngClass]=\\\"displayFieldCss('geoData.longitude')\\\">\\n              <label for=\\\"Longitude\\\" class=\\\"control-label required\\\">Longitude</label>\\n              <input type=\\\"text\\\" id=\\\"longitude\\\" class=\\\"form-control\\\" formControlName=\\\"longitude\\\" (change)=\\\"setGeoCordinates()\\\" />\\n              <app-show-validation-error [displayError]=\\\"isFieldValid('geoData.longitude')\\\" errorMsg=\\\"Longitude is mandatory\\\"></app-show-validation-error>\\n            </div>\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <div class=\\\"col-md-4\\\" [ngClass]=\\\"displayFieldCss('geoData.length')\\\">\\n              <label for=\\\"length\\\" class=\\\"control-label required\\\">Plot Length (ft.)</label>\\n              <input type=\\\"text\\\" id=\\\"length\\\" class=\\\"form-control\\\" formControlName=\\\"length\\\" (change) = \\\"calculateTotalArea()\\\" />\\n              <app-show-validation-error [displayError]=\\\"isFieldValid('geoData.length')\\\" errorMsg=\\\"Plot length is mandatory\\\"></app-show-validation-error>\\n            </div>\\n            <div class=\\\"col-md-4\\\" [ngClass]=\\\"displayFieldCss('geoData.width')\\\">\\n              <label for=\\\"width\\\" class=\\\"control-label required\\\">Plot Width (ft.)</label>\\n              <input type=\\\"text\\\" id=\\\"width\\\" class=\\\"form-control\\\" formControlName=\\\"width\\\" (change) = \\\"calculateTotalArea()\\\" />\\n              <app-show-validation-error [displayError]=\\\"isFieldValid('geoData.width')\\\" errorMsg=\\\"Plot width is mandatory\\\"></app-show-validation-error>\\n            </div>\\n            <div class=\\\"col-md-4\\\">\\n              <label for=\\\"width\\\" class=\\\"control-label\\\">Total Plot Area (sq. ft.)</label>\\n              <input type=\\\"text\\\" id=\\\"width\\\" class=\\\"form-control\\\" formControlName=\\\"totalArea\\\" readonly />\\n            </div>\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <div class=\\\"col-md-12\\\" [ngClass]=\\\"displayFieldCss('geoData.address')\\\">\\n              <label for=\\\"address\\\" class=\\\"control-label required\\\">Property Address</label>\\n              <input type=\\\"text\\\" id=\\\"address\\\" class=\\\"form-control\\\" formControlName=\\\"address\\\" />\\n              <app-show-validation-error [displayError]=\\\"isFieldValid('geoData.address')\\\" errorMsg=\\\"Plot address is mandatory\\\"></app-show-validation-error>\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-12\\\" *ngIf=\\\"lat && long\\\">\\n          <app-gmaps [lat]=\\\"lat\\\"  [lng]=\\\"long\\\"></app-gmaps>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"panel panel-default\\\">\\n      <div class=\\\"panel-heading\\\">\\n        <h1 class=\\\"panel-title\\\">Pre Mutation Sketch</h1>\\n      </div>\\n      <div class=\\\"panel-body\\\">\\n        <div>\\n        <div class=\\\"col-md-4\\\" *ngIf=\\\"sketchURL!=null && sketchURL!=''\\\">\\n        <a [href]='sketchURL' target = '_blank'>View Sketch</a>\\n        </div>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"panel panel-default\\\">\\n      <div class=\\\"panel-heading\\\">\\n        <h1 class=\\\"panel-title\\\">Land Allottee Details</h1>\\n      </div>\\n      <div class=\\\"panel-body\\\">\\n        <div formGroupName=\\\"ownerDetails\\\">\\n          <div class=\\\"form-group\\\">\\n            <div class=\\\"col-md-4\\\" [ngClass]=\\\"displayFieldCss('ownerDetails.ownerName')\\\">\\n              <label for=\\\"ownerName\\\" class=\\\"control-label required\\\">Allottee Name</label>\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"ownerName\\\" formControlName=\\\"ownerName\\\">\\n              <app-show-validation-error [displayError]=\\\"isFieldValid('ownerDetails.ownerName')\\\" errorMsg=\\\"Property allotee Name is mandatory\\\"></app-show-validation-error>\\n            </div>\\n\\n            <div class=\\\"col-md-4\\\" [ngClass]=\\\"displayFieldCss('ownerDetails.aadharNo')\\\">\\n              <label for=\\\"aadharNo\\\" class=\\\"control-label required\\\">Aadhar #</label>\\n              <input type=\\\"text\\\" id=\\\"aadharNo\\\" class=\\\"form-control\\\" formControlName=\\\"aadharNo\\\" />\\n              <app-show-validation-error [displayError]=\\\"isFieldValid('ownerDetails.aadharNo')\\\" errorMsg=\\\"Aadhar # is mandatory\\\"></app-show-validation-error>\\n            </div>\\n\\n            <div class=\\\"col-md-4\\\" [ngClass]=\\\"displayFieldCss('ownerDetails.gender')\\\">\\n             <div> <label class=\\\"control-label required\\\">Gender</label></div>\\n              <label class=\\\"md-check radio-inline\\\">\\n                <input type=\\\"radio\\\" value=\\\"M\\\" formControlName=\\\"gender\\\">Male\\n              </label>\\n              <label class=\\\"md-check radio-inline\\\">\\n                <input type=\\\"radio\\\" value=\\\"F\\\" formControlName=\\\"gender\\\">Female\\n              </label>\\n              <app-show-validation-error [displayError]=\\\"isFieldValid('ownerDetails.gender')\\\" errorMsg=\\\"Gender is mandatory\\\"></app-show-validation-error>\\n            </div>\\n\\n              </div>\\n              <div class=\\\"form-group\\\">\\n                <div class=\\\"col-md-4\\\" [ngClass]=\\\"displayFieldCss('ownerDetails.mobileNo')\\\">\\n                  <label for=\\\"mobileNo\\\" class=\\\"control-label required\\\">Mobile</label>\\n                  <input type=\\\"text\\\" id=\\\"mobileNo\\\" class=\\\"form-control\\\" formControlName=\\\"mobileNo\\\" />\\n                  <app-show-validation-error [displayError]=\\\"isFieldValid('ownerDetails.mobileNo')\\\" errorMsg=\\\"Mobile number is mandatory\\\"></app-show-validation-error>\\n                </div>\\n                <div class=\\\"col-md-4\\\" [ngClass]=\\\"displayFieldCss('ownerDetails.emailID')\\\">\\n                  <label for=\\\"emailID\\\" class=\\\"control-label required\\\">Email ID</label>\\n                  <input type=\\\"text\\\" id=\\\"emailID\\\" class=\\\"form-control\\\" formControlName=\\\"emailID\\\" />\\n                  <app-show-validation-error [displayError]=\\\"isFieldValid('ownerDetails.emailID')\\\" errorMsg=\\\"Email ID is mandatory\\\"></app-show-validation-error>\\n                </div>\\n              </div>\\n              <div class=\\\"form-group\\\">\\n                <div class=\\\"col-md-12\\\" [ngClass]=\\\"displayFieldCss('ownerDetails.address')\\\">\\n                  <label for=\\\"ownerAddress\\\" class=\\\"control-label required\\\">Allottee Address</label>\\n                  <input type=\\\"text\\\" id=\\\"ownerAddress\\\" class=\\\"form-control\\\" formControlName=\\\"address\\\" />\\n                  <app-show-validation-error [displayError]=\\\"isFieldValid('ownerDetails.address')\\\" errorMsg=\\\"Allotee address is mandatory\\\"></app-show-validation-error>\\n                </div>\\n              </div>\\n\\n            </div>\\n          </div>\\n    </div>\\n    </fieldset>\\n\\n    <div class=\\\"panel panel-default\\\">\\n      <div class=\\\"panel-heading\\\">\\n        <h1 class=\\\"panel-title\\\">New allotee Details</h1>\\n      </div>\\n      <div class=\\\"panel-body\\\">\\n        <div formGroupName=\\\"newOwnerDetails\\\">\\n          <div class=\\\"form-group\\\">\\n            <div class=\\\"col-md-4\\\" [ngClass]=\\\"displayFieldCss('newOwnerDetails.ownerName')\\\">\\n              <label for=\\\"newownerName\\\" class=\\\"control-label required\\\">Allottee Name</label><span style=\\\"color: red;font-size: 20px;\\\">*</span>\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"newownerName\\\" formControlName=\\\"ownerName\\\">\\n              <app-show-validation-error [displayError]=\\\"isFieldValid('newOwnerDetails.ownerName')\\\" errorMsg=\\\"Property allotee Name is mandatory\\\"></app-show-validation-error>\\n            </div>\\n\\n            <div class=\\\"col-md-4\\\" [ngClass]=\\\"displayFieldCss('newOwnerDetails.aadharNo')\\\">\\n              <label for=\\\"newaadharNo\\\" class=\\\"control-label required\\\">Aadhar #</label><span style=\\\"color: red;font-size: 20px;\\\">*</span>\\n              <input type=\\\"text\\\" id=\\\"newaadharNo\\\" class=\\\"form-control\\\" formControlName=\\\"aadharNo\\\" />\\n              <app-show-validation-error [displayError]=\\\"isFieldValid('newOwnerDetails.aadharNo')\\\" errorMsg=\\\"Aadhar # is mandatory\\\"></app-show-validation-error>\\n            </div>\\n\\n            <div class=\\\"col-md-4\\\" [ngClass]=\\\"displayFieldCss('newOwnerDetails.gender')\\\">\\n             <div> <label class=\\\"control-label required\\\">Gender</label><span style=\\\"color: red;font-size: 20px;\\\">*</span></div>\\n              <label class=\\\"md-check radio-inline\\\">\\n                <input type=\\\"radio\\\" value=\\\"M\\\" formControlName=\\\"gender\\\">Male\\n              </label>\\n              <label class=\\\"md-check radio-inline\\\">\\n                <input type=\\\"radio\\\" value=\\\"F\\\" formControlName=\\\"gender\\\">Female\\n              </label>\\n              <app-show-validation-error [displayError]=\\\"isFieldValid('newOwnerDetails.gender')\\\" errorMsg=\\\"Gender is mandatory\\\"></app-show-validation-error>\\n            </div>\\n\\n              </div>\\n              <div class=\\\"form-group\\\">\\n                <div class=\\\"col-md-4\\\" [ngClass]=\\\"displayFieldCss('newOwnerDetails.mobileNo')\\\">\\n                  <label for=\\\"newmobileNo\\\" class=\\\"control-label required\\\">Mobile</label><span style=\\\"color: red;font-size: 20px;\\\">*</span>\\n                  <input type=\\\"text\\\" id=\\\"newmobileNo\\\" class=\\\"form-control\\\" formControlName=\\\"mobileNo\\\" />\\n                  <app-show-validation-error [displayError]=\\\"isFieldValid('newOwnerDetails.mobileNo')\\\" errorMsg=\\\"Mobile number is mandatory\\\"></app-show-validation-error>\\n                </div>\\n                <div class=\\\"col-md-4\\\" [ngClass]=\\\"displayFieldCss('newOwnerDetails.emailID')\\\">\\n                  <label for=\\\"newemailID\\\" class=\\\"control-label required\\\">Email ID</label><span style=\\\"color: red;font-size: 20px;\\\">*</span>\\n                  <input type=\\\"text\\\" id=\\\"newemailID\\\" class=\\\"form-control\\\" formControlName=\\\"emailID\\\" />\\n                  <app-show-validation-error [displayError]=\\\"isFieldValid('newOwnerDetails.emailID')\\\" errorMsg=\\\"Email ID is mandatory\\\"></app-show-validation-error>\\n                </div>\\n              </div>\\n              <div class=\\\"form-group\\\">\\n                <div class=\\\"col-md-12\\\" [ngClass]=\\\"displayFieldCss('newOwnerDetails.address')\\\">\\n                  <label for=\\\"newownerAddress\\\" class=\\\"control-label required\\\">Allottee Address</label><span style=\\\"color: red;font-size: 20px;\\\">*</span>\\n                  <input type=\\\"text\\\" id=\\\"newownerAddress\\\" class=\\\"form-control\\\" formControlName=\\\"address\\\" />\\n                  <app-show-validation-error [displayError]=\\\"isFieldValid('newOwnerDetails.address')\\\" errorMsg=\\\"Allotee address is mandatory\\\"></app-show-validation-error>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n    </div>\\n\\n    <div class=\\\"panel panel-default\\\">\\n      <div class=\\\"panel-heading\\\">\\n        <h1 class=\\\"panel-title\\\">Sale Details</h1>\\n      </div>\\n      <div class=\\\"panel-body\\\">\\n      <div class=\\\"form-group\\\">\\n        <div class=\\\"col-md-4\\\" [ngClass]=\\\"displayFieldCss('saleRate')\\\">\\n          <label for=\\\"saleRate\\\" class=\\\"control-label required\\\">Sale Rate</label><span style=\\\"color: red;font-size: 20px;\\\">*</span>\\n          <input type=\\\"text\\\" id=\\\"saleRate\\\" class=\\\"form-control\\\" formControlName=\\\"saleRate\\\" />\\n          <app-show-validation-error [displayError]=\\\"isFieldValid('saleRate')\\\" errorMsg=\\\"Sale Rate is mandatory\\\"></app-show-validation-error>\\n        </div>\\n      </div>\\n      </div>\\n    </div>\\n\\n    <div align=\\\"right\\\">\\n      <button class=\\\"btn btn-danger\\\" (click) = \\\"back()\\\">Back</button>\\n      <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Submit</button>\\n    </div>\\n  </form>\\n</div>\\n</ng-container>\\n</ng-template>\\n<ng-template #applicationSuccess>\\n  <div class=\\\"alert alert-success\\\"> <strong>Success!</strong>Registration application has been submitted successfully ! The transaction ID for this record is <strong>{{landRecord.txnID}}</strong></div>\\n  <div class=\\\"alert alert-info\\\">\\n    Please click on <strong>Submit New</strong> to submit another registration application !\\n  </div>\\n  <div align=\\\"center\\\"><button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" (click)=\\\"submitNew()\\\">Submit New</button></div>\\n</ng-template>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/registration-form/registration-form.component.html\n// module id = ./src/app/registration-form/registration-form.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { LandRecord, Owner } from '../models/LandRecord';\nimport {\n  FormGroup,\n  FormBuilder,\n  Validators,\n  FormControl\n} from '@angular/forms';\nimport { ManageLandRecordsService } from '../services/managelandrecords.service';\nimport { ActivatedRoute, Params , Router} from '@angular/router'; \nimport 'rxjs/add/operator/switchMap'; \n\n@Component({\n  selector: 'app-registration-form',\n  templateUrl: './registration-form.component.html',\n  styleUrls: ['./registration-form.component.css']\n})\nexport class RegistrationFormComponent implements OnInit {\n  pid : number;\n  fetchComplete : boolean = false;\n  template : string = \"form1\";\n  noSearchResults : boolean = false;\n  noSearchResultsSurvey : boolean = false;\n  landRecord: LandRecord = new LandRecord(); //initialize land record object\n  landRecords: LandRecord[];\n  landRecordsMojani: LandRecord = new LandRecord();\n  layoutForm: FormGroup;\n  lat :number;\n  long : number; \n  transferEnabled : boolean = false;\n  formData: FormData = new FormData();\n  sketchURL: string;\n\n  constructor(private formBuilder: FormBuilder, private manageLandRecordsService : ManageLandRecordsService, private router: Router,private route: ActivatedRoute) { }\n \n  ngOnInit() {\n  }\n  \n  search(){\n    console.log(\"PID :\" + this.pid);\n    this.manageLandRecordsService.getLandRecordsMojaniByPid(this.pid)\n    .subscribe(\n      response => {\n        console.log(\"res received from mojanibypid\" + JSON.stringify(response));\n        if(response !=null) {\n          this.landRecordsMojani = <LandRecord> response.landRecords;\n          if(this.landRecordsMojani!=null){\n            this.noSearchResultsSurvey= false;\n            if(this.landRecordsMojani.isMojaniApproved==true)\n              this.transferEnabled=true;\n            else this.transferEnabled=false;\n          }else{\n            this.noSearchResultsSurvey = true;\n            this.transferEnabled=false;\n          }\n          console.log(\"search result survey\"+this.noSearchResultsSurvey);\n        }\n      }\n    );\n    this.manageLandRecordsService.getLandRecordsKaveriByPid(this.pid)\n    .subscribe(\n      response => {\n            console.log(\"res received from getLandRecords service\" + JSON.stringify(response));\n            if (response !=null) {\n              this.landRecords = <LandRecord[]> response.landRecords;\n             if(this.landRecords!=null && this.landRecords.length > 0){\n               this.noSearchResults= false;\n               if(this.landRecords[0].isKaveriApproved==true)\n               this.transferEnabled=true;\n               else this.transferEnabled=false;               \n             }else{\n               this.noSearchResults = true;\n             }\n              this.fetchComplete = true; \n            }\n        }); \n    }     \n\n  loadRegistrationForm(){\n    this.template = \"form2\";\n    this.loadForm();\n  }\n\n  loadForm() {\n    this.lat=null;\n    this.long = null;\n    this.layoutForm = this.formBuilder.group({\n      TimeStamp: [null],\n      pid: [''],\n      wardNo: [null],\n      areaCode: [null],\n      siteNo: [null],\n      geoData: this.formBuilder.group({\n        latitude: [null],\n        longitude: [null],\n        length: [null],\n        width: [null],\n        totalArea: '',\n        address: [null]\n      }),\n      preMutationSketch: [null],\n      ownerDetails: this.formBuilder.group({\n        ownerName: [null],\n        gender:[null],\n        aadharNo: [null],\n        mobileNo: [null],\n        emailID:[null],\n        address: [null]\n      }),\n      newOwnerDetails: this.formBuilder.group({\n        ownerName: [null, [Validators.required, Validators.pattern('[a-zA-Z\\\\s]*')]],\n        gender:[null, Validators.required],\n        aadharNo: [null, [Validators.required, Validators.pattern('[0-9]{12}')]],\n        mobileNo: [null, [Validators.required,Validators.pattern('[0-9]{10}')]],\n        emailID:[null, [Validators.required,Validators.email]],\n        address: [null, Validators.required]\n      }),\n      saleRate :[null, Validators.required]\n    });\n          if(this.noSearchResults==false){\n          this.manageLandRecordsService.getLandRecordsKaveriByPid(this.pid)\n          .subscribe(\n            response => {\n              console.log(\"res received getLandRecordbyPid service\" + JSON.stringify(response));\n              if (response !=null && response.success) {\n                this.landRecord = <LandRecord> response.landRecords[response.landRecords.length-1];\n                this.landRecord.ownerDetails = <Owner> this.landRecord.newOwnerDetails;\n                this.landRecord.newOwnerDetails = <Owner> new Owner();\n                console.log(\"landRecord object received:\" + JSON.stringify(this.landRecord));\n                if(response.landRecords[0].sketchURL!=null && response.landRecords[0].sketchURL!=\"\"){\n                  this.sketchURL = response.landRecords[0].sketchURL;\n                }\n                this.layoutForm.patchValue(this.landRecord);\n                this.setGeoCordinates();\n              }\n            }); \n          }else if(this.noSearchResultsSurvey==false){\n            this.manageLandRecordsService.getLandRecordsMojaniByPid(this.pid)\n            .subscribe(\n            response => {\n              console.log(\"res received getLandRecordbyPid service\" + JSON.stringify(response));\n              if (response !=null && response.success) {\n                this.landRecord = <LandRecord> response.landRecords;\n                this.landRecord.newOwnerDetails = <Owner> this.landRecord.ownerDetails;\n                this.landRecord.ownerDetails = <Owner> new Owner();\n                this.landRecord.ownerDetails.aadharNo = 0;\n                this.landRecord.ownerDetails.address = \"NA\";\n                this.landRecord.ownerDetails.emailID = \"NA\";\n                this.landRecord.ownerDetails.mobileNo = 0;\n                this.landRecord.ownerDetails.ownerName = \"Land Authority\";                \n                console.log(\"landRecord object received:\" + this.landRecord);\n                if(response.sketchURL!=null && response.sketchURL!=\"\"){\n                  this.sketchURL = response.sketchURL;\n                }\n                this.layoutForm.patchValue(this.landRecord);\n                this.setGeoCordinates();\n              }\n            }); \n          } \n  }\n\n  setGeoCordinates(){\n    this.lat = parseFloat(this.layoutForm.get('geoData.latitude').value);\n    this.long =parseFloat( this.layoutForm.get('geoData.longitude').value);\n  }   \n\n  IDGenerator() {    \n      var length = 8;\n      var timestamp = +new Date;      \n      var _getRandomInt = function( min, max ) {\n       return Math.floor( Math.random() * ( max - min + 1 ) ) + min;\n      } \n      var id = \"\";\n        var ts = timestamp.toString();\n        var parts = ts.split( \"\" ).reverse();      \n        for( var i = 0; i < length; ++i ) {\n         var index = _getRandomInt( 0, parts.length - 1 );\n         id += parts[index];   \n      } \n      return id;     \n    } \n  \n  onSubmit() {\n    if (this.layoutForm.valid) {\n      console.log('form valid success');\n      //sync the form model with the data model\n      this.landRecord = <LandRecord>this.layoutForm.value;\n      this.landRecord.TimeStamp = new Date().getTime();\n      this.landRecord.txnID = \"TXN\"+this.IDGenerator();\n      this.landRecord.isKaveriApproved = false;\n      this.landRecord.sketchURL = this.sketchURL;\n      console.log(\"pid generated: \" + this.landRecord.pid);\n      console.log(\"txn id: \"+this.landRecord.txnID);\n      console.log(\"landrecord: \" + JSON.stringify(this.landRecord));\n\n      this.manageLandRecordsService.addLandRecordKaveri(this.landRecord)\n        .subscribe(\n        response => {\n          console.log(\"res received addLandRecord service\" + JSON.stringify(response));\n            if (response !=null && response.success) {\n              this.template = \"form3\";\n            }\n        });\n    } else {\n      this.validateAllFormFields(this.layoutForm);\n    }\n  }\n\n  validateAllFormFields(formGroup: FormGroup) {\n    Object.keys(formGroup.controls).forEach(field => {\n      console.log(field);\n      const control = formGroup.get(field);\n      if (control instanceof FormControl) {\n        control.markAsTouched({ onlySelf: true });\n      } else if (control instanceof FormGroup) {\n        this.validateAllFormFields(control);\n      }\n    });\n  }\n\n  displayFieldCss(field: string) {\n    return {\n      'has-error': this.isFieldValid(field),\n      'has-feedback': this.isFieldValid(field)\n    };\n  }\n  isFieldValid(field: string) {\n    return !this.layoutForm.get(field).valid && this.layoutForm.get(field).touched;\n  }\n\n  submitNew() {\n    this.fetchComplete = false;\n    this.template = \"form1\";\n    this.pid=null;\n    this.transferEnabled = false;\n  }\n  back(){\n    this.template = \"form1\";\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/registration-form/registration-form.component.ts","import { Injectable } from '@angular/core';\nimport { Http, Headers } from '@angular/http';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/map';\n\n@Injectable()\nexport class FileUploadService {\n\n  constructor(private http:Http) { }\n \n  public uploadFiles(formData : FormData) {\n    console.log(\"Inside File upload service\");\n   return this.http.post('/uploads/fileUpload', formData)\n         .map(files => files.json());\n  }\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/file-upload.service.ts","import { Injectable } from '@angular/core';\nimport { Http, Headers } from '@angular/http';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/catch';\n\n@Injectable()\nexport class LoginAuthenticationService {\n  \n  private isLoggedIn: boolean = false; \n  private loggedInRole : string;\n  private authMessage : string;\n\n  constructor(private http:Http){} \n    // API: POST /UserAuthentication\n    public isUserAuthenticated(userInfo) : Observable<boolean>{\n      console.log(\"Inside isUserAuthenticated function in authentication service\");\n      let headers = new Headers();\n      headers.append('Content-Type', 'application/json');     \n      return this.http.post('/login/api/authentication', JSON.stringify(userInfo), { headers: headers })\n        .map(res => {         \n          let jsonRes= res.json();\n          if(jsonRes.authSuccess){\n              this.isLoggedIn = true;\n              this.loggedInRole = jsonRes.role;\n              this.authMessage = jsonRes.message;\n              return true;\n          }else{\n              this.isLoggedIn = false;\n              this.authMessage = jsonRes.message;\n              return false;\n          }\n        \n      });     \n    }\n    \n    isUserLoggedIn(): boolean {\n\t\treturn this.isLoggedIn;\n\t  }\n\n    logoutUser(): void {\n\t\tthis.isLoggedIn = false;\n\t}\n\n     getLoggedInRole(): string {\n     return this.loggedInRole ;\n\n    }\n  \n   getAuthMessage(): string {\n     return this.authMessage ;\n\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/login-authentication.service.ts","import { Injectable } from '@angular/core';\nimport { Http, Headers } from '@angular/http';\nimport { Observable } from 'rxjs/Observable';\nimport { LandRecord } from '../models/LandRecord';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/catch';\n\n@Injectable()\nexport class ManageLandRecordsService {\n\n  constructor(private http: Http) { }\n\n  // API: GET /landRecords Mojani/:pId\n  public getLandRecordsMojaniByPid(pId: number) : Observable<any> {\n      console.log(\"Inside getLandRecordsMojaniByPid method in manageLandRecord service\");\n      return this.http.get('/manageLandRecords/api/getLandRecordsMojaniByPid/'+pId) \n      .map(res => res.json() );\n  }\n\n  // API: GET /landRecords Kaveri/:pId\n  public getLandRecordsKaveriByPid(pId: number) : Observable<any> {\n    console.log(\"Inside getLandRecordsKaveriByPid method in manageLandRecord service\");\n    return this.http.get('/manageKaveriRecords/api/getLandRecordsKaveriByPid/'+pId) \n    .map(res => res.json() );\n  }\n\n  // API: GET /landRecords/:Ward\n  public getLandRecordsKaveriByWard(wardNo: number) : Observable<any> {\n    console.log(\"Inside getLandRecordsKaveriBywardno method in manageLandRecord service\");\n    return this.http.get('/manageKaveriRecords/api/getLandRecordsKaveriByWard/'+wardNo) \n    .map(res => res.json() );\n  }\n  \n  // API: POST /landRecords/landRecord\n  public addLandRecordKaveri(landRecord: LandRecord){\n    console.log(\"Inside addLandRecordKaveri method in manageLandRecord service\");\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    return this.http.post('/manageKaveriRecords/api/addLandRecordKaveri', JSON.stringify(landRecord), { headers: headers })\n      .map(res => res.json());     \n  }\n\n   // API: POST /landRecords/landRecord[]\n    public updateKaveriApprovedRecords(landRecords: LandRecord[]){\n      console.log(\"Inside updateMojaniApprovedRecords method in manageLandRecord service\");\n      let headers = new Headers();\n      headers.append('Content-Type', 'application/json');\n      return this.http.post('/manageKaveriRecords/api/updateKaveriApprovedRecords', JSON.stringify(landRecords), { headers: headers })\n        .map(res => res.json());     \n    }\n\n    // API: GET /landRecords Kaveri/:pId\n   public getLandRecordsKaveriBytxnId(txnID: string) : Observable<any> {\n    console.log(\"Inside getLandRecordsKaveriBytxnId method in manageLandRecord service\");\n    return this.http.get('/manageKaveriRecords/api/getLandRecordsKaveriBytxnId/'+txnID)\n    .map(res => res.json() );\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/managelandrecords.service.ts","module.exports = \".error-msg {\\n  color: #a94442;\\n}\\n\\n.fix-error-icon {\\n  top: 27px;\\n}\\n\\n.required:after {\\n  content: \\\" *\\\";\\n}\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/show-validation-error/show-validation-error.component.css\n// module id = ./src/app/show-validation-error/show-validation-error.component.css\n// module chunks = main","module.exports = \"<div *ngIf=\\\"displayError\\\">\\n  <span class=\\\"glyphicon glyphicon-remove form-control-feedback fix-error-icon\\\"></span>\\n  <span class=\\\"sr-only\\\">(error)</span>\\n  <div class=\\\"error-msg\\\">\\n    {{ errorMsg }}\\n  </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/show-validation-error/show-validation-error.component.html\n// module id = ./src/app/show-validation-error/show-validation-error.component.html\n// module chunks = main","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-show-validation-error',\n  templateUrl: './show-validation-error.component.html',\n  styleUrls: ['./show-validation-error.component.css']\n})\nexport class ShowValidationErrorComponent implements OnInit {\n  @Input() errorMsg: string;\n  @Input() displayError: boolean;\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/show-validation-error/show-validation-error.component.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts"],"sourceRoot":"webpack:///"}